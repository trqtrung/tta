// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TTA.Api.Data;

namespace TTA.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180621093050_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("TTA.Api.Models.OptionList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnName("key");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name");

                    b.Property<Guid?>("RecordGuid")
                        .HasColumnName("record_guid");

                    b.Property<string>("Value")
                        .HasColumnName("value");

                    b.Property<DateTime>("updated_timestamp");

                    b.HasKey("Id");

                    b.ToTable("option_lists");
                });

            modelBuilder.Entity("TTA.Api.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Client")
                        .HasColumnName("client");

                    b.Property<string>("ClientOrderId")
                        .HasColumnName("client_order_id");

                    b.Property<DateTimeOffset>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnName("customer_id");

                    b.Property<DateTime?>("Delivered")
                        .HasColumnName("delivered");

                    b.Property<string>("Note")
                        .HasColumnName("note");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasColumnName("order_no");

                    b.Property<DateTime?>("ReceivePayment")
                        .HasColumnName("receive_payment");

                    b.Property<string>("ShippingService")
                        .HasColumnName("shipping_service");

                    b.Property<string>("Stage")
                        .HasColumnName("stage");

                    b.Property<decimal?>("Total")
                        .HasColumnName("total");

                    b.Property<DateTime>("updated_timestamp");

                    b.HasKey("Id");

                    b.HasAlternateKey("Id", "OrderNo");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("TTA.Api.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<decimal>("Discount")
                        .HasColumnName("discount");

                    b.Property<Guid>("OrderId")
                        .HasColumnName("order_id");

                    b.Property<decimal>("Price")
                        .HasColumnName("price");

                    b.Property<int>("ProductId")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnName("quantity");

                    b.Property<DateTime>("updated_timestamp");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("order_items");
                });

            modelBuilder.Entity("TTA.Api.Models.OrderTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int?>("Action")
                        .HasColumnName("Action");

                    b.Property<Guid>("OrderId")
                        .HasColumnName("order_id");

                    b.Property<DateTime>("TrackingTime")
                        .HasColumnName("tracking_time");

                    b.Property<string>("Type")
                        .HasColumnName("type");

                    b.Property<DateTime>("updated_timestamp");

                    b.HasKey("Id");

                    b.ToTable("order_tracking");
                });

            modelBuilder.Entity("TTA.Api.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name");

                    b.Property<int?>("Type")
                        .HasColumnName("type");

                    b.Property<DateTime>("updated_timestamp");

                    b.HasKey("Id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("TTA.Api.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Address");

                    b.Property<DateTime?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created");

                    b.Property<string>("Email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name");

                    b.Property<string>("Phone");

                    b.Property<DateTime>("updated_timestamp");

                    b.HasKey("Id");

                    b.ToTable("suppliers");
                });

            modelBuilder.Entity("TTA.Api.Models.OrderItem", b =>
                {
                    b.HasOne("TTA.Api.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
